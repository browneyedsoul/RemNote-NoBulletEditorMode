:root {
    --nobullet-triangle: #000;
    --nobullet-triangle-dark: #D4D4DA;
}

.hierarchy-editor--ltr {
    .TreeNode,
    .TreeNode--list {
        margin-left: 1.55rem;
    }
}
%rmvTag {
    .hierarchy-editor__tag-bar__tag {
        background-color: transparent !important;
        span {
            display: none;
        }
        .rn-tag__close {
            opacity: .3;
        }
    }
}

@mixin Nobullet($nobullet-triangle) {
    .rn-rem-icon-bullet.rn-rem-bullet--hidden-children {
        &::after {
            content: "";
            display: block;
            position: relative;
            left: 1rem;
            width: 0;
            height: 0;
            border-top: 0.35rem solid transparent;
            border-left: 0.35rem solid $nobullet-triangle;
            border-bottom: 0.35rem solid transparent;
            border-radius: 25px;
            pointer-events: none;
        }
    }
    .perfect-circle.rn-rem-bullet--hidden-children {
        &::after {
            content: "";
            display: block;
            position: relative;
            left: 1.75rem;
            width: 0;
            height: 0;
            border-top: 0.35rem solid transparent;
            border-left: 0.35rem solid $nobullet-triangle;
            border-bottom: 0.35rem solid transparent;
            border-radius: 25px;
            pointer-events: none;
        }
    }
    #document {
        .tree-node--parent {
            > [data-rem-tags~="bulletlist"] {
                margin-left: 1rem;
                @extend %rmvTag;
                .perfect-circle__inner {
                    visibility: visible;
                    .rem-bullet__core {
                        fill: $nobullet-triangle;
                    }
                }
            }
        }
        [data-rem-container-tags~="bulletlists"] {
            @extend %rmvTag;
            .tree-node--children {
                .rem {
                    margin-left: 1rem;
                    .rn-bullet-container {
                        left: unset;
                    }
                    .perfect-circle {
                        .perfect-circle__inner {
                            visibility: visible;
                            .rem-bullet__core {
                                fill: $nobullet-triangle;
                            }
                        }
                    }
                }
                .toggle-collapse-button {
                    left: unset;
                }
                .tree-node--parent {
                    .rem {
                        .perfect-circle {
                            &.rn-rem-bullet--hidden-children {
                                &::after {
                                    display: none;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
@include Nobullet(
    var(--nobullet-triangle)
);
.dark {
    @include Nobullet(
        var(--nobullet-triangle-dark)
    );
}

.rn-bullet-container > span {
    display: flex;
    align-items: center;
}

.rn-bullet-container:has(.rn-rem-bullet--hidden-children) {
    position: relative;
    left: -1.5rem;
}
.toggle-collapse-button {
    position: relative;
    left: 1.4rem;
}

.rn-editor-container {
    .tree-node--parent {
        &:has(.toggle-collapse-button) {
            &:hover {
                .rn-bullet-container {
                    position: relative;
                    left: -1.5rem;
                }
            }
        }
    }
}

.rem:not(:hover) .perfect-circle__inner {
  visibility: hidden;
}
.rn-rem-icon-bullet {
    &.rn-rem-bullet--hidden-children {
        svg[data-icon="document"],
        svg[data-icon="folder"] {
            position: relative;
            left: 0.2rem;
        }
    }
}
[data-rem-tags~="document"] {
    .rn-rem-icon-bullet {
        border-style: unset;
    }
    .rn-rem-icon-bullet {
        display: flex;
        align-items: center;
    }
    .tree-node--parent {
        .perfect-circle.rn-rem-bullet--hidden-children::after {
            left: 1.2rem;
        }
    }
}